<?php
namespace Training;

interface ITestMathInterface
{
    /**
     * На входе массив чисел
     * array(2,5,3,5,6,7,8,9,25,24,18,26,27,28,29,30,31)
     * Вывести числа кратные 3 или 7 в строку разделенную запятыми
     *
     * Ответ '3,6,7...и тд.'
     */
    public function testMath1($array);

    /**
     * Нужно: вычислить факториал числа рекурсивно
     * $n - число
     */
    public function testMath2($n);

    /**
     * Нужно сгенерировать случайным образом пароль заданной длинны и из указанных символов.
     * $symbols - строка с символами
     * $lenght - длинна пароля
     *
     * Пример:
     * на входе
     *  $symbols = 'abcdsrRGHK12345'
     *  $lenght = 5
     * на выходе строка 'bR41s'
     */
    public function testMath3($symbols, $lenght);

    /**
     * Вывести числа Фибоначи, где кол-во цифр задано параметром $n
     *
     * На выходе строка к примеру - '0,1,1,2,3,5 и тд.'
     *
     * Числа Фибоначи где каждое последующее число
     *  образуется путем сложения двух предыдущих.
     * Пример:
     * 0,1
     * 0,1,1
     * 0,1,1,2
     * 0,1,1,2,3 и тд.
     */
    public function testMath4($n);

    /**
     * Задача о рюкзаке и воре.
     * TODO: добавить описание задачи
     * На входе товары и максимальный обьем рюкзака
     */
    public function testMath5($array,$max_v);

    /**
     * Функция должна получать на входе три параметра: название населенного пункта отправления, название населенного пункта прибытия, а также список, каждый элемент которого представляет собой названия неких двух населенных пунктов и стоимость проезда от одного населенного пункта до другого.
    На выходе функция должна возвращать самый дешевый маршрут между населенными пунктами отправления и прибытия, в виде списка транзитных населенных пунктов (в порядке следования), а также общую стоимость проезда.
    Пожалуйста, обратите внимание на то, что нас интересует не только правильность реализации алгоритма, но и общее качество кода. Код должен быть пригоден для включения в состав программного продукта.
     */
    public function testMath6($a,$b,$array);
}